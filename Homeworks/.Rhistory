  X <- matrix(c(rep(1,8), rep(1,4), rep(0,8), rep(1,4), rep(c(1,1,0,0),2), rep(c(0,0,1,1),2)), nrow=8, ncol=4, byrow=FALSE)
  library(xtable)
x <- xtable(X, align=rep("",ncol(X)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
 V <- matrix(c(3, -1, 1, -1, 5, -1, 1, -1, 3), 3,3, byrow=TRUE)
 library(xtable)
 x <- xtable(V, align=rep("",ncol(V)+1),display=rep("d", ncol(V)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
  Vvals <- as.matrix(eigen(V)$values)
  

  lvector <- function(x, fmt="f") {
x <- xtable(x, align=rep("",ncol(x)+1),display=rep(fmt, ncol(x)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
}
 lvector(Vvals, "d")

for (i in 1:3){
 lvector(as.matrix(eigen(V)$vectors[,i]))
}
'org_babel_R_eoe'
V_inv = solve(V)
C = as.matrix(eigen(V_inv)$vectors)
D_sqrt = diag(lapply(eigen(V_inv)$values, sqrt))
W = C%*%D_sqrt%*%t(C)
Prod = W%*%W
x <- xtable(Prod, align=rep("",ncol(Prod)+1), digits=rep(4,ncol(Prod)+1))
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
A <- matrix(c(4, 4.001, 4.001, 4.002),2,2,byrow=T)
B <- matrix(c(4, 4.001, 4.001, 4.002001),2,2,byrow=T)
 x <- xtable(A, align=rep("",ncol(A)+1)) # We repeat empty string
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
 x <- xtable(B, align=rep("",ncol(B)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
lvector(solve(A))
'org_babel_R_eoe'
lvector(solve(B))
'org_babel_R_eoe'
lvector(-3*solve(B))
'org_babel_R_eoe'
project <- function (X) {X%*%(solve(t(X)%*%X))%*%t(X)}
'org_babel_R_eoe'
C <- matrix(c(0,1,-1,0,0,0, 0, 0,0,
              0,0,0, 0,0,1,-1,-1,1),nrow=2,ncol=9,byrow=T)
 x <- xtable(C, align=rep("",ncol(C)+1),display=rep("d",ncol(C)+1)) # We repeat empty string
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
  X <- matrix(c(rep(1,8), rep(1,4), rep(0,8), rep(1,4), rep(c(1,1,0,0),2), rep(c(0,0,1,1),2)), nrow=8, ncol=4, byrow=FALSE)
  library(xtable)
x <- xtable(X, align=rep("",ncol(X)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
 V <- matrix(c(3, -1, 1, -1, 5, -1, 1, -1, 3), 3,3, byrow=TRUE)
 library(xtable)
 x <- xtable(V, align=rep("",ncol(V)+1),display=rep("d", ncol(V)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
  Vvals <- as.matrix(eigen(V)$values)
  

  lvector <- function(x, fmt="f") {
x <- xtable(x, align=rep("",ncol(x)+1),display=rep(fmt, ncol(x)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
}
 lvector(Vvals, "d")

for (i in 1:3){
 lvector(as.matrix(eigen(V)$vectors[,i]))
}
'org_babel_R_eoe'
V_inv = solve(V)
C = as.matrix(eigen(V_inv)$vectors)
D_sqrt = diag(lapply(eigen(V_inv)$values, sqrt))
W = C%*%D_sqrt%*%t(C)
Prod = W%*%W
x <- xtable(Prod, align=rep("",ncol(Prod)+1), digits=rep(4,ncol(Prod)+1))
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
A <- matrix(c(4, 4.001, 4.001, 4.002),2,2,byrow=T)
B <- matrix(c(4, 4.001, 4.001, 4.002001),2,2,byrow=T)
 x <- xtable(A, align=rep("",ncol(A)+1)) # We repeat empty string
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
 x <- xtable(B, align=rep("",ncol(B)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
lvector(solve(A))
'org_babel_R_eoe'
lvector(solve(B))
'org_babel_R_eoe'
lvector(-3*solve(B))
'org_babel_R_eoe'
project <- function (X) {X%*%(solve(t(X)%*%X))%*%t(X)}
'org_babel_R_eoe'
C <- matrix(c(0,1,-1,0,0,0, 0, 0,0,
              0,0,0, 0,0,1,-1,-1,1),nrow=2,ncol=9,byrow=T)
 x <- xtable(C, align=rep("",ncol(C)+1),display=rep("d",ncol(C)+1)) # We repeat empty string
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
  X <- matrix(c(rep(1,8), rep(1,4), rep(0,8), rep(1,4), rep(c(1,1,0,0),2), rep(c(0,0,1,1),2)), nrow=8, ncol=4, byrow=FALSE)
  library(xtable)
x <- xtable(X, align=rep("",ncol(X)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
 V <- matrix(c(3, -1, 1, -1, 5, -1, 1, -1, 3), 3,3, byrow=TRUE)
 library(xtable)
 x <- xtable(V, align=rep("",ncol(V)+1),display=rep("d", ncol(V)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
  Vvals <- as.matrix(eigen(V)$values)
  

  lvector <- function(x, fmt="f") {
x <- xtable(x, align=rep("",ncol(x)+1),display=rep(fmt, ncol(x)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
}
 lvector(Vvals, "d")

for (i in 1:3){
 lvector(as.matrix(eigen(V)$vectors[,i]))
}
'org_babel_R_eoe'
V_inv = solve(V)
C = as.matrix(eigen(V_inv)$vectors)
D_sqrt = diag(lapply(eigen(V_inv)$values, sqrt))
W = C%*%D_sqrt%*%t(C)
Prod = W%*%W
x <- xtable(Prod, align=rep("",ncol(Prod)+1), digits=rep(4,ncol(Prod)+1))
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
A <- matrix(c(4, 4.001, 4.001, 4.002),2,2,byrow=T)
B <- matrix(c(4, 4.001, 4.001, 4.002001),2,2,byrow=T)
 x <- xtable(A, align=rep("",ncol(A)+1)) # We repeat empty string
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
 x <- xtable(B, align=rep("",ncol(B)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
lvector(solve(A))
'org_babel_R_eoe'
lvector(solve(B))
'org_babel_R_eoe'
lvector(-3*solve(B))
'org_babel_R_eoe'
project <- function (X) {X%*%(solve(t(X)%*%X))%*%t(X)}
'org_babel_R_eoe'
C <- matrix(c(0,1,-1,0,0,0, 0, 0,0,
              0,0,0, 0,0,1,-1,-1,1),nrow=2,ncol=9,byrow=T)
 x <- xtable(C, align=rep("",ncol(C)+1),display=rep("d",ncol(C)+1)) # We repeat empty string
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
  X <- matrix(c(rep(1,8), rep(1,4), rep(0,8), rep(1,4), rep(c(1,1,0,0),2), rep(c(0,0,1,1),2)), nrow=8, ncol=4, byrow=FALSE)
  library(xtable)
x <- xtable(X, align=rep("",ncol(X)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
 V <- matrix(c(3, -1, 1, -1, 5, -1, 1, -1, 3), 3,3, byrow=TRUE)
 library(xtable)
 x <- xtable(V, align=rep("",ncol(V)+1),display=rep("d", ncol(V)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
  Vvals <- as.matrix(eigen(V)$values)
  

  lvector <- function(x, fmt="f") {
x <- xtable(x, align=rep("",ncol(x)+1),display=rep(fmt, ncol(x)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
}
 lvector(Vvals, "d")

for (i in 1:3){
 lvector(as.matrix(eigen(V)$vectors[,i]))
}
'org_babel_R_eoe'
V_inv = solve(V)
C = as.matrix(eigen(V_inv)$vectors)
D_sqrt = diag(lapply(eigen(V_inv)$values, sqrt))
W = C%*%D_sqrt%*%t(C)
Prod = W%*%W
x <- xtable(Prod, align=rep("",ncol(Prod)+1), digits=rep(4,ncol(Prod)+1))
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
A <- matrix(c(4, 4.001, 4.001, 4.002),2,2,byrow=T)
B <- matrix(c(4, 4.001, 4.001, 4.002001),2,2,byrow=T)
 x <- xtable(A, align=rep("",ncol(A)+1)) # We repeat empty string
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
 x <- xtable(B, align=rep("",ncol(B)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
lvector(solve(A))
'org_babel_R_eoe'
lvector(solve(B))
'org_babel_R_eoe'
lvector(-3*solve(B))
'org_babel_R_eoe'
project <- function (X) {X%*%(solve(t(X)%*%X))%*%t(X)}
'org_babel_R_eoe'
C <- matrix(c(0,1,-1,0,0,0, 0, 0,0,
              0,0,0, 0,0,1,-1,-1,1),nrow=2,ncol=9,byrow=T)
 x <- xtable(C, align=rep("",ncol(C)+1),display=rep("d",ncol(C)+1)) # We repeat empty string
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
  X <- matrix(c(rep(1,8), rep(1,4), rep(0,8), rep(1,4), rep(c(1,1,0,0),2), rep(c(0,0,1,1),2)), nrow=8, ncol=4, byrow=FALSE)
  library(xtable)
x <- xtable(X, align=rep("",ncol(X)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
 V <- matrix(c(3, -1, 1, -1, 5, -1, 1, -1, 3), 3,3, byrow=TRUE)
 library(xtable)
 x <- xtable(V, align=rep("",ncol(V)+1),display=rep("d", ncol(V)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
  Vvals <- as.matrix(eigen(V)$values)
  

  lvector <- function(x, fmt="f") {
x <- xtable(x, align=rep("",ncol(x)+1),display=rep(fmt, ncol(x)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
}
 lvector(Vvals, "d")

for (i in 1:3){
 lvector(as.matrix(eigen(V)$vectors[,i]))
}
'org_babel_R_eoe'
V_inv = solve(V)
C = as.matrix(eigen(V_inv)$vectors)
D_sqrt = diag(lapply(eigen(V_inv)$values, sqrt))
W = C%*%D_sqrt%*%t(C)
Prod = W%*%W
x <- xtable(Prod, align=rep("",ncol(Prod)+1), digits=rep(4,ncol(Prod)+1))
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
A <- matrix(c(4, 4.001, 4.001, 4.002),2,2,byrow=T)
B <- matrix(c(4, 4.001, 4.001, 4.002001),2,2,byrow=T)
 x <- xtable(A, align=rep("",ncol(A)+1)) # We repeat empty string
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
 x <- xtable(B, align=rep("",ncol(B)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
lvector(solve(A))
'org_babel_R_eoe'
lvector(solve(B))
'org_babel_R_eoe'
lvector(-3*solve(B))
'org_babel_R_eoe'
project <- function (X) {X%*%(solve(t(X)%*%X))%*%t(X)}
'org_babel_R_eoe'
C <- matrix(c(0,1,-1,0,0,0, 0, 0,0,
              0,0,0, 0,0,1,-1,-1,1),nrow=2,ncol=9,byrow=T)
 x <- xtable(C, align=rep("",ncol(C)+1),display=rep("d",ncol(C)+1)) # We repeat empty string
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
  X <- matrix(c(rep(1,8), rep(1,4), rep(0,8), rep(1,4), rep(c(1,1,0,0),2), rep(c(0,0,1,1),2)), nrow=8, ncol=4, byrow=FALSE)
  library(xtable)
x <- xtable(X, align=rep("",ncol(X)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
 V <- matrix(c(3, -1, 1, -1, 5, -1, 1, -1, 3), 3,3, byrow=TRUE)
 library(xtable)
 x <- xtable(V, align=rep("",ncol(V)+1),display=rep("d", ncol(V)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
  Vvals <- as.matrix(eigen(V)$values)
  

  lvector <- function(x, fmt="f") {
x <- xtable(x, align=rep("",ncol(x)+1),display=rep(fmt, ncol(x)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
}
 lvector(Vvals, "d")

for (i in 1:3){
 lvector(as.matrix(eigen(V)$vectors[,i]))
}
'org_babel_R_eoe'
V_inv = solve(V)
C = as.matrix(eigen(V_inv)$vectors)
D_sqrt = diag(lapply(eigen(V_inv)$values, sqrt))
W = C%*%D_sqrt%*%t(C)
Prod = W%*%W
x <- xtable(Prod, align=rep("",ncol(Prod)+1), digits=rep(4,ncol(Prod)+1))
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
A <- matrix(c(4, 4.001, 4.001, 4.002),2,2,byrow=T)
B <- matrix(c(4, 4.001, 4.001, 4.002001),2,2,byrow=T)
 x <- xtable(A, align=rep("",ncol(A)+1)) # We repeat empty string
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
 x <- xtable(B, align=rep("",ncol(B)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
lvector(solve(A))
'org_babel_R_eoe'
lvector(solve(B))
'org_babel_R_eoe'
lvector(-3*solve(B))
'org_babel_R_eoe'
project <- function (X) {X%*%(solve(t(X)%*%X))%*%t(X)}
'org_babel_R_eoe'
C <- matrix(c(0,1,-1,0,0,0, 0, 0,0,
              0,0,0, 0,0,1,-1,-1,1),nrow=2,ncol=9,byrow=T)
 x <- xtable(C, align=rep("",ncol(C)+1),display=rep("d",ncol(C)+1)) # We repeat empty string
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
  X <- matrix(c(rep(1,8), rep(1,4), rep(0,8), rep(1,4), rep(c(1,1,0,0),2), rep(c(0,0,1,1),2)), nrow=8, ncol=4, byrow=FALSE)
  library(xtable)
x <- xtable(X, align=rep("",ncol(X)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
 V <- matrix(c(3, -1, 1, -1, 5, -1, 1, -1, 3), 3,3, byrow=TRUE)
 library(xtable)
 x <- xtable(V, align=rep("",ncol(V)+1),display=rep("d", ncol(V)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
  Vvals <- as.matrix(eigen(V)$values)
  

  lvector <- function(x, fmt="f") {
x <- xtable(x, align=rep("",ncol(x)+1),display=rep(fmt, ncol(x)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
}
 lvector(Vvals, "d")

for (i in 1:3){
 lvector(as.matrix(eigen(V)$vectors[,i]))
}
'org_babel_R_eoe'
V_inv = solve(V)
C = as.matrix(eigen(V_inv)$vectors)
D_sqrt = diag(lapply(eigen(V_inv)$values, sqrt))
W = C%*%D_sqrt%*%t(C)
Prod = W%*%W
x <- xtable(Prod, align=rep("",ncol(Prod)+1), digits=rep(4,ncol(Prod)+1))
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
A <- matrix(c(4, 4.001, 4.001, 4.002),2,2,byrow=T)
B <- matrix(c(4, 4.001, 4.001, 4.002001),2,2,byrow=T)
 x <- xtable(A, align=rep("",ncol(A)+1)) # We repeat empty string
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
 x <- xtable(B, align=rep("",ncol(B)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
lvector(solve(A))
'org_babel_R_eoe'
lvector(solve(B))
'org_babel_R_eoe'
lvector(-3*solve(B))
'org_babel_R_eoe'
project <- function (X) {X%*%(solve(t(X)%*%X))%*%t(X)}
'org_babel_R_eoe'
C <- matrix(c(0,1,-1,0,0,0, 0, 0,0,
              0,0,0, 0,0,1,-1,-1,1),nrow=2,ncol=9,byrow=T)
 x <- xtable(C, align=rep("",ncol(C)+1),display=rep("d",ncol(C)+1)) # We repeat empty string
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
  X <- matrix(c(rep(1,8), rep(1,4), rep(0,8), rep(1,4), rep(c(1,1,0,0),2), rep(c(0,0,1,1),2)), nrow=8, ncol=4, byrow=FALSE)
  library(xtable)
x <- xtable(X, align=rep("",ncol(X)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
 V <- matrix(c(3, -1, 1, -1, 5, -1, 1, -1, 3), 3,3, byrow=TRUE)
 library(xtable)
 x <- xtable(V, align=rep("",ncol(V)+1),display=rep("d", ncol(V)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
  Vvals <- as.matrix(eigen(V)$values)
  

  lvector <- function(x, fmt="f") {
x <- xtable(x, align=rep("",ncol(x)+1),display=rep(fmt, ncol(x)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
}
 lvector(Vvals, "d")

for (i in 1:3){
 lvector(as.matrix(eigen(V)$vectors[,i]))
}
'org_babel_R_eoe'
V_inv = solve(V)
C = as.matrix(eigen(V_inv)$vectors)
D_sqrt = diag(lapply(eigen(V_inv)$values, sqrt))
W = C%*%D_sqrt%*%t(C)
Prod = W%*%W
x <- xtable(Prod, align=rep("",ncol(Prod)+1), digits=rep(4,ncol(Prod)+1))
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
A <- matrix(c(4, 4.001, 4.001, 4.002),2,2,byrow=T)
B <- matrix(c(4, 4.001, 4.001, 4.002001),2,2,byrow=T)
 x <- xtable(A, align=rep("",ncol(A)+1)) # We repeat empty string
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
 x <- xtable(B, align=rep("",ncol(B)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
lvector(solve(A))
'org_babel_R_eoe'
lvector(solve(B))
'org_babel_R_eoe'
lvector(-3*solve(B))
'org_babel_R_eoe'
project <- function (X) {X%*%(solve(t(X)%*%X))%*%t(X)}
'org_babel_R_eoe'
C <- matrix(c(0,1,-1,0,0,0, 0, 0,0,
              0,0,0, 0,0,1,-1,-1,1),nrow=2,ncol=9,byrow=T)
 x <- xtable(C, align=rep("",ncol(C)+1),display=rep("d",ncol(C)+1)) # We repeat empty string
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
  X <- matrix(c(rep(1,8), rep(1,4), rep(0,8), rep(1,4), rep(c(1,1,0,0),2), rep(c(0,0,1,1),2)), nrow=8, ncol=4, byrow=FALSE)
  library(xtable)
x <- xtable(X, align=rep("",ncol(X)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
 V <- matrix(c(3, -1, 1, -1, 5, -1, 1, -1, 3), 3,3, byrow=TRUE)
 library(xtable)
 x <- xtable(V, align=rep("",ncol(V)+1),display=rep("d", ncol(V)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
  Vvals <- as.matrix(eigen(V)$values)
  

  lvector <- function(x, fmt="f") {
x <- xtable(x, align=rep("",ncol(x)+1),display=rep(fmt, ncol(x)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
}
 lvector(Vvals, "d")

for (i in 1:3){
 lvector(as.matrix(eigen(V)$vectors[,i]))
}
'org_babel_R_eoe'
V_inv = solve(V)
C = as.matrix(eigen(V_inv)$vectors)
D_sqrt = diag(lapply(eigen(V_inv)$values, sqrt))
W = C%*%D_sqrt%*%t(C)
Prod = W%*%W
x <- xtable(Prod, align=rep("",ncol(Prod)+1), digits=rep(4,ncol(Prod)+1))
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
A <- matrix(c(4, 4.001, 4.001, 4.002),2,2,byrow=T)
B <- matrix(c(4, 4.001, 4.001, 4.002001),2,2,byrow=T)
 x <- xtable(A, align=rep("",ncol(A)+1)) # We repeat empty string
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
 x <- xtable(B, align=rep("",ncol(B)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
lvector(solve(A))
'org_babel_R_eoe'
lvector(solve(B))
'org_babel_R_eoe'
lvector(-3*solve(B))
'org_babel_R_eoe'
project <- function (X) {X%*%(solve(t(X)%*%X))%*%t(X)}
'org_babel_R_eoe'
C <- matrix(c(0,1,-1,0,0,0, 0, 0,0,
              0,0,0, 0,0,1,-1,-1,1),nrow=2,ncol=9,byrow=T)
 x <- xtable(C, align=rep("",ncol(C)+1),display=rep("d",ncol(C)+1)) # We repeat empty string
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
  X <- matrix(c(rep(1,8), rep(1,4), rep(0,8), rep(1,4), rep(c(1,1,0,0),2), rep(c(0,0,1,1),2)), nrow=8, ncol=4, byrow=FALSE)
  library(xtable)
x <- xtable(X, align=rep("",ncol(X)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
 V <- matrix(c(3, -1, 1, -1, 5, -1, 1, -1, 3), 3,3, byrow=TRUE)
 library(xtable)
 x <- xtable(V, align=rep("",ncol(V)+1),display=rep("d", ncol(V)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
  Vvals <- as.matrix(eigen(V)$values)
  

  lvector <- function(x, fmt="f") {
x <- xtable(x, align=rep("",ncol(x)+1),display=rep(fmt, ncol(x)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
}
 lvector(Vvals, "d")

for (i in 1:3){
 lvector(as.matrix(eigen(V)$vectors[,i]))
}
'org_babel_R_eoe'
V_inv = solve(V)
C = as.matrix(eigen(V_inv)$vectors)
D_sqrt = diag(lapply(eigen(V_inv)$values, sqrt))
W = C%*%D_sqrt%*%t(C)
Prod = W%*%W
x <- xtable(Prod, align=rep("",ncol(Prod)+1), digits=rep(4,ncol(Prod)+1))
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
A <- matrix(c(4, 4.001, 4.001, 4.002),2,2,byrow=T)
B <- matrix(c(4, 4.001, 4.001, 4.002001),2,2,byrow=T)
 x <- xtable(A, align=rep("",ncol(A)+1)) # We repeat empty string
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
 x <- xtable(B, align=rep("",ncol(B)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
lvector(solve(A))
'org_babel_R_eoe'
lvector(solve(B))
'org_babel_R_eoe'
lvector(-3*solve(B))
'org_babel_R_eoe'
project <- function (X) {X%*%(solve(t(X)%*%X))%*%t(X)}
'org_babel_R_eoe'
C <- matrix(c(0,1,-1,0,0,0, 0, 0,0,
              0,0,0, 0,0,1,-1,-1,1),nrow=2,ncol=9,byrow=T)
 x <- xtable(C, align=rep("",ncol(C)+1),display=rep("d",ncol(C)+1)) # We repeat empty string
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
  X <- matrix(c(rep(1,8), rep(1,4), rep(0,8), rep(1,4), rep(c(1,1,0,0),2), rep(c(0,0,1,1),2)), nrow=8, ncol=4, byrow=FALSE)
  library(xtable)
x <- xtable(X, align=rep("",ncol(X)+1),digits=rep(0, ncol(X)+1) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
  X <- matrix(c(rep(1,8), rep(1,4), rep(0,8), rep(1,4), rep(c(1,1,0,0),2), rep(c(0,0,1,1),2)), nrow=8, ncol=4, byrow=FALSE)
  library(xtable)
x <- xtable(X, align=rep("",ncol(X)+1),digits=rep(0, ncol(X)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
  X <- matrix(c(rep(1,8), rep(1,4), rep(0,8), rep(1,4), rep(c(1,1,0,0),2), rep(c(0,0,1,1),2)), nrow=8, ncol=4, byrow=FALSE)
  library(xtable)
x <- xtable(X, align=rep("",ncol(X)+1),digits=rep(0, ncol(X)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
 V <- matrix(c(3, -1, 1, -1, 5, -1, 1, -1, 3), 3,3, byrow=TRUE)
 library(xtable)
 x <- xtable(V, align=rep("",ncol(V)+1),display=rep("d", ncol(V)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
  Vvals <- as.matrix(eigen(V)$values)
  

  lvector <- function(x, fmt="f") {
x <- xtable(x, align=rep("",ncol(x)+1),display=rep(fmt, ncol(x)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
}
 lvector(Vvals, "d")

for (i in 1:3){
 lvector(as.matrix(eigen(V)$vectors[,i]))
}
'org_babel_R_eoe'
V_inv = solve(V)
C = as.matrix(eigen(V_inv)$vectors)
D_sqrt = diag(lapply(eigen(V_inv)$values, sqrt))
W = C%*%D_sqrt%*%t(C)
Prod = W%*%W
x <- xtable(Prod, align=rep("",ncol(Prod)+1), digits=rep(4,ncol(Prod)+1))
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
A <- matrix(c(4, 4.001, 4.001, 4.002),2,2,byrow=T)
B <- matrix(c(4, 4.001, 4.001, 4.002001),2,2,byrow=T)
 x <- xtable(A, align=rep("",ncol(A)+1)) # We repeat empty string
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
 x <- xtable(B, align=rep("",ncol(B)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
lvector(solve(A))
'org_babel_R_eoe'
lvector(solve(B))
'org_babel_R_eoe'
lvector(-3*solve(B))
'org_babel_R_eoe'
project <- function (X) {X%*%(solve(t(X)%*%X))%*%t(X)}
'org_babel_R_eoe'
C <- matrix(c(0,1,-1,0,0,0, 0, 0,0,
              0,0,0, 0,0,1,-1,-1,1),nrow=2,ncol=9,byrow=T)
 x <- xtable(C, align=rep("",ncol(C)+1),display=rep("d",ncol(C)+1)) # We repeat empty string
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
  X <- matrix(c(rep(1,8), rep(1,4), rep(0,8), rep(1,4), rep(c(1,1,0,0),2), rep(c(0,0,1,1),2)), nrow=8, ncol=4, byrow=FALSE)
  library(xtable)
x <- xtable(X, align=rep("",ncol(X)+1),digits=rep(0, ncol(X)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
 V <- matrix(c(3, -1, 1, -1, 5, -1, 1, -1, 3), 3,3, byrow=TRUE)
 library(xtable)
 x <- xtable(V, align=rep("",ncol(V)+1),display=rep("d", ncol(V)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
  Vvals <- as.matrix(eigen(V)$values)
  

  lvector <- function(x, fmt="f") {
x <- xtable(x, align=rep("",ncol(x)+1),display=rep(fmt, ncol(x)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
}
 lvector(Vvals, "d")

for (i in 1:3){
 lvector(as.matrix(eigen(V)$vectors[,i]))
}
'org_babel_R_eoe'
V_inv = solve(V)
C = as.matrix(eigen(V_inv)$vectors)
D_sqrt = diag(lapply(eigen(V_inv)$values, sqrt))
W = C%*%D_sqrt%*%t(C)
Prod = W%*%W
x <- xtable(Prod, align=rep("",ncol(Prod)+1), digits=rep(4,ncol(Prod)+1))
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
A <- matrix(c(4, 4.001, 4.001, 4.002),2,2,byrow=T)
B <- matrix(c(4, 4.001, 4.001, 4.002001),2,2,byrow=T)
 x <- xtable(A, align=rep("",ncol(A)+1)) # We repeat empty string
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
 x <- xtable(B, align=rep("",ncol(B)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
lvector(solve(A))
'org_babel_R_eoe'
lvector(solve(B))
'org_babel_R_eoe'
lvector(-3*solve(B))
'org_babel_R_eoe'
project <- function (X) {X%*%(solve(t(X)%*%X))%*%t(X)}
'org_babel_R_eoe'
C <- matrix(c(0,1,-1,0,0,0, 0, 0,0,
              0,0,0, 0,0,1,-1,-1,1),nrow=2,ncol=9,byrow=T)
 x <- xtable(C, align=rep("",ncol(C)+1),display=rep("d",ncol(C)+1)) # We repeat empty string
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
  X <- matrix(c(rep(1,8), rep(1,4), rep(0,8), rep(1,4), rep(c(1,1,0,0),2), rep(c(0,0,1,1),2)), nrow=8, ncol=4, byrow=FALSE)
  library(xtable)
x <- xtable(X, align=rep("",ncol(X)+1),digits=rep(0, ncol(X)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
 V <- matrix(c(3, -1, 1, -1, 5, -1, 1, -1, 3), 3,3, byrow=TRUE)
 library(xtable)
 x <- xtable(V, align=rep("",ncol(V)+1),display=rep("d", ncol(V)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
  Vvals <- as.matrix(eigen(V)$values)
  

  lvector <- function(x, fmt="f") {
x <- xtable(x, align=rep("",ncol(x)+1),display=rep(fmt, ncol(x)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
}
 lvector(Vvals, "d")

for (i in 1:3){
 lvector(as.matrix(eigen(V)$vectors[,i]))
}
'org_babel_R_eoe'
V_inv = solve(V)
C = as.matrix(eigen(V_inv)$vectors)
D_sqrt = diag(lapply(eigen(V_inv)$values, sqrt))
W = C%*%D_sqrt%*%t(C)
Prod = W%*%W
x <- xtable(Prod, align=rep("",ncol(Prod)+1), digits=rep(4,ncol(Prod)+1))
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
A <- matrix(c(4, 4.001, 4.001, 4.002),2,2,byrow=T)
B <- matrix(c(4, 4.001, 4.001, 4.002001),2,2,byrow=T)
 x <- xtable(A, align=rep("",ncol(A)+1)) # We repeat empty string
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
 x <- xtable(B, align=rep("",ncol(B)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
lvector(solve(A))
'org_babel_R_eoe'
lvector(solve(B))
'org_babel_R_eoe'
lvector(-3*solve(B))
'org_babel_R_eoe'
project <- function (X) {X%*%(solve(t(X)%*%X))%*%t(X)}
'org_babel_R_eoe'
C <- matrix(c(0,1,-1,0,0,0, 0, 0,0,
              0,0,0, 0,0,1,-1,-1,1),nrow=2,ncol=9,byrow=T)
 x <- xtable(C, align=rep("",ncol(C)+1),display=rep("d",ncol(C)+1)) # We repeat empty string
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
  X <- matrix(c(rep(1,8), rep(1,4), rep(0,8), rep(1,4), rep(c(1,1,0,0),2), rep(c(0,0,1,1),2)), nrow=8, ncol=4, byrow=FALSE)
  library(xtable)
x <- xtable(X, align=rep("",ncol(X)+1),digits=rep(0, ncol(X)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
 V <- matrix(c(3, -1, 1, -1, 5, -1, 1, -1, 3), 3,3, byrow=TRUE)
 library(xtable)
 x <- xtable(V, align=rep("",ncol(V)+1),display=rep("d", ncol(V)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
  Vvals <- as.matrix(eigen(V)$values)
  

  lvector <- function(x, fmt="f") {
x <- xtable(x, align=rep("",ncol(x)+1),display=rep(fmt, ncol(x)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
}
 lvector(Vvals, "d")

for (i in 1:3){
 lvector(as.matrix(eigen(V)$vectors[,i]))
}
'org_babel_R_eoe'
V_inv = solve(V)
C = as.matrix(eigen(V_inv)$vectors)
D_sqrt = diag(lapply(eigen(V_inv)$values, sqrt))
W = C%*%D_sqrt%*%t(C)
Prod = W%*%W
x <- xtable(Prod, align=rep("",ncol(Prod)+1), digits=rep(4,ncol(Prod)+1))
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
A <- matrix(c(4, 4.001, 4.001, 4.002),2,2,byrow=T)
B <- matrix(c(4, 4.001, 4.001, 4.002001),2,2,byrow=T)
 x <- xtable(A, align=rep("",ncol(A)+1)) # We repeat empty string
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
 x <- xtable(B, align=rep("",ncol(B)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
lvector(solve(A))
'org_babel_R_eoe'
lvector(solve(B))
'org_babel_R_eoe'
lvector(-3*solve(B))
'org_babel_R_eoe'
project <- function (X) {X%*%(solve(t(X)%*%X))%*%t(X)}
'org_babel_R_eoe'
C <- matrix(c(0,1,-1,0,0,0, 0, 0,0,
              0,0,0, 0,0,1,-1,-1,1),nrow=2,ncol=9,byrow=T)
 x <- xtable(C, align=rep("",ncol(C)+1),display=rep("d",ncol(C)+1)) # We repeat empty string
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
  X <- matrix(c(rep(1,8), rep(1,4), rep(0,8), rep(1,4), rep(c(1,1,0,0),2), rep(c(0,0,1,1),2)), nrow=8, ncol=4, byrow=FALSE)
  library(xtable)
x <- xtable(X, align=rep("",ncol(X)+1),digits=rep(0, ncol(X)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
 V <- matrix(c(3, -1, 1, -1, 5, -1, 1, -1, 3), 3,3, byrow=TRUE)
 library(xtable)
 x <- xtable(V, align=rep("",ncol(V)+1),display=rep("d", ncol(V)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
  Vvals <- as.matrix(eigen(V)$values)
  

  lvector <- function(x, fmt="f") {
x <- xtable(x, align=rep("",ncol(x)+1),display=rep(fmt, ncol(x)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
}
 lvector(Vvals, "d")

for (i in 1:3){
 lvector(as.matrix(eigen(V)$vectors[,i]))
}
'org_babel_R_eoe'
V_inv = solve(V)
C = as.matrix(eigen(V_inv)$vectors)
D_sqrt = diag(lapply(eigen(V_inv)$values, sqrt))
W = C%*%D_sqrt%*%t(C)
Prod = W%*%W
x <- xtable(Prod, align=rep("",ncol(Prod)+1), digits=rep(4,ncol(Prod)+1))
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
A <- matrix(c(4, 4.001, 4.001, 4.002),2,2,byrow=T)
B <- matrix(c(4, 4.001, 4.001, 4.002001),2,2,byrow=T)
 x <- xtable(A, align=rep("",ncol(A)+1)) # We repeat empty string
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
 x <- xtable(B, align=rep("",ncol(B)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
lvector(solve(A))
'org_babel_R_eoe'
lvector(solve(B))
'org_babel_R_eoe'
lvector(-3*solve(B))
'org_babel_R_eoe'
project <- function (X) {X%*%(solve(t(X)%*%X))%*%t(X)}
'org_babel_R_eoe'
C <- matrix(c(0,1,-1,0,0,0, 0, 0,0,
              0,0,0, 0,0,1,-1,-1,1),nrow=2,ncol=9,byrow=T)
 x <- xtable(C, align=rep("",ncol(C)+1),display=rep("d",ncol(C)+1)) # We repeat empty string
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
  Vvals <- as.matrix(eigen(V)$values)
  

  lvector <- function(x, fmt="f") {
x <- xtable(x, align=rep("",ncol(x)+1),display=rep(fmt, ncol(x)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
}
 lvector(Vvals, "d")

for (i in 1:3){
 lvector(as.matrix(eigen(V)$vectors[,i]))
}
'org_babel_R_eoe'
eigen(V)
eigen(V)$values
Vvals
lvector(Vvals)
V
eigen(V)
C <- matrix(c(0,1,-1,0,0,0, 0, 0,0,
              0,0,0, 0,0,1,-1,-1,1),nrow=2,ncol=9,byrow=T)
 x <- xtable(C, align=rep("",ncol(C)+1),display=rep("d",ncol(C)+1)) # We repeat empty string
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
eigen(V)
lvector(V)
lvector(Vvals)
floor(Vvals)
round(Vvals, 2)
  Vvals <- as.matrix(eigen(V)$values)
  Vvals <- round(Vvals,2)
  Vvals

  lvector <- function(x, fmt="f") {
x <- xtable(x, align=rep("",ncol(x)+1),display=rep(fmt, ncol(x)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
}
 lvector(Vvals, "d")

for (i in 1:3){
 lvector(as.matrix(eigen(V)$vectors[,i]))
}
'org_babel_R_eoe'
  X <- matrix(c(rep(1,8), rep(1,4), rep(0,8), rep(1,4), rep(c(1,1,0,0),2), rep(c(0,0,1,1),2)), nrow=8, ncol=4, byrow=FALSE)
  library(xtable)
x <- xtable(X, align=rep("",ncol(X)+1),digits=rep(0, ncol(X)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
 V <- matrix(c(3, -1, 1, -1, 5, -1, 1, -1, 3), 3,3, byrow=TRUE)
 library(xtable)
 x <- xtable(V, align=rep("",ncol(V)+1),display=rep("d", ncol(V)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
  Vvals <- as.matrix(eigen(V)$values)
  Vvals <- round(Vvals,2) #In order to get the correct output from xtable
   
  lvector <- function(x, fmt="f") {
x <- xtable(x, align=rep("",ncol(x)+1),display=rep(fmt, ncol(x)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
}
 lvector(Vvals, "d")

for (i in 1:3){
 lvector(as.matrix(eigen(V)$vectors[,i]))
}
'org_babel_R_eoe'
V_inv = solve(V)
C = as.matrix(eigen(V_inv)$vectors)
D_sqrt = diag(lapply(eigen(V_inv)$values, sqrt))
W = C%*%D_sqrt%*%t(C)
Prod = W%*%W
x <- xtable(Prod, align=rep("",ncol(Prod)+1), digits=rep(4,ncol(Prod)+1))
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
A <- matrix(c(4, 4.001, 4.001, 4.002),2,2,byrow=T)
B <- matrix(c(4, 4.001, 4.001, 4.002001),2,2,byrow=T)
 x <- xtable(A, align=rep("",ncol(A)+1)) # We repeat empty string
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
 x <- xtable(B, align=rep("",ncol(B)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
lvector(solve(A))
'org_babel_R_eoe'
lvector(solve(B))
'org_babel_R_eoe'
lvector(-3*solve(B))
'org_babel_R_eoe'
project <- function (X) {X%*%(solve(t(X)%*%X))%*%t(X)}
'org_babel_R_eoe'
C <- matrix(c(0,1,-1,0,0,0, 0, 0,0,
              0,0,0, 0,0,1,-1,-1,1),nrow=2,ncol=9,byrow=T)
 x <- xtable(C, align=rep("",ncol(C)+1),display=rep("d",ncol(C)+1)) # We repeat empty string
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
  X <- matrix(c(rep(1,8), rep(1,4), rep(0,8), rep(1,4), rep(c(1,1,0,0),2), rep(c(0,0,1,1),2)), nrow=8, ncol=4, byrow=FALSE)
  library(xtable)
x <- xtable(X, align=rep("",ncol(X)+1),digits=rep(0, ncol(X)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
 V <- matrix(c(3, -1, 1, -1, 5, -1, 1, -1, 3), 3,3, byrow=TRUE)
 library(xtable)
 x <- xtable(V, align=rep("",ncol(V)+1),display=rep("d", ncol(V)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
  Vvals <- as.matrix(eigen(V)$values)
  Vvals <- round(Vvals,2) #In order to get the correct output from xtable
   
  lvector <- function(x, fmt="f") {
x <- xtable(x, align=rep("",ncol(x)+1),display=rep(fmt, ncol(x)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
}
 lvector(Vvals, "d")

for (i in 1:3){
 lvector(as.matrix(eigen(V)$vectors[,i]))
}
'org_babel_R_eoe'
V_inv = solve(V)
C = as.matrix(eigen(V_inv)$vectors)
D_sqrt = diag(lapply(eigen(V_inv)$values, sqrt))
W = C%*%D_sqrt%*%t(C)
Prod = W%*%W
x <- xtable(Prod, align=rep("",ncol(Prod)+1), digits=rep(4,ncol(Prod)+1))
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
A <- matrix(c(4, 4.001, 4.001, 4.002),2,2,byrow=T)
B <- matrix(c(4, 4.001, 4.001, 4.002001),2,2,byrow=T)
 x <- xtable(A, align=rep("",ncol(A)+1)) # We repeat empty string
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
 x <- xtable(B, align=rep("",ncol(B)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
lvector(solve(A))
'org_babel_R_eoe'
lvector(solve(B))
'org_babel_R_eoe'
lvector(-3*solve(B))
'org_babel_R_eoe'
project <- function (X) {X%*%(solve(t(X)%*%X))%*%t(X)}
'org_babel_R_eoe'
C <- matrix(c(0,1,-1,0,0,0, 0, 0,0,
              0,0,0, 0,0,1,-1,-1,1),nrow=2,ncol=9,byrow=T)
 x <- xtable(C, align=rep("",ncol(C)+1),display=rep("d",ncol(C)+1)) # We repeat empty string
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
  X <- matrix(c(rep(1,8), rep(1,4), rep(0,8), rep(1,4), rep(c(1,1,0,0),2), rep(c(0,0,1,1),2)), nrow=8, ncol=4, byrow=FALSE)
  library(xtable)
x <- xtable(X, align=rep("",ncol(X)+1),digits=rep(0, ncol(X)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
 V <- matrix(c(3, -1, 1, -1, 5, -1, 1, -1, 3), 3,3, byrow=TRUE)
 library(xtable)
 x <- xtable(V, align=rep("",ncol(V)+1),display=rep("d", ncol(V)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
  Vvals <- as.matrix(eigen(V)$values)
  Vvals <- round(Vvals,2) #In order to get the correct output from xtable
   
  lvector <- function(x, fmt="f") {
x <- xtable(x, align=rep("",ncol(x)+1),display=rep(fmt, ncol(x)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
}
 lvector(Vvals, "d")

for (i in 1:3){
 lvector(as.matrix(eigen(V)$vectors[,i]))
}
'org_babel_R_eoe'
V_inv = solve(V)
C = as.matrix(eigen(V_inv)$vectors)
D_sqrt = diag(lapply(eigen(V_inv)$values, sqrt))
W = C%*%D_sqrt%*%t(C)
Prod = W%*%W
x <- xtable(Prod, align=rep("",ncol(Prod)+1), digits=rep(4,ncol(Prod)+1))
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
A <- matrix(c(4, 4.001, 4.001, 4.002),2,2,byrow=T)
B <- matrix(c(4, 4.001, 4.001, 4.002001),2,2,byrow=T)
 x <- xtable(A, align=rep("",ncol(A)+1)) # We repeat empty string
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
 x <- xtable(B, align=rep("",ncol(B)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
lvector(solve(A))
'org_babel_R_eoe'
lvector(solve(B))
'org_babel_R_eoe'
lvector(-3*solve(B))
'org_babel_R_eoe'
project <- function (X) {X%*%(solve(t(X)%*%X))%*%t(X)}
'org_babel_R_eoe'
C <- matrix(c(0,1,-1,0,0,0, 0, 0,0,
              0,0,0, 0,0,1,-1,-1,1),nrow=2,ncol=9,byrow=T)
 x <- xtable(C, align=rep("",ncol(C)+1),display=rep("d",ncol(C)+1)) # We repeat empty string
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
  X <- matrix(c(rep(1,8), rep(1,4), rep(0,8), rep(1,4), rep(c(1,1,0,0),2), rep(c(0,0,1,1),2)), nrow=8, ncol=4, byrow=FALSE)
  library(xtable)
x <- xtable(X, align=rep("",ncol(X)+1),digits=rep(0, ncol(X)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
X <- matrix(c(rep(1,8), rep(1,4), rep(0,8), rep(1,4), rep(c(1,1,0,0),2), rep(c(0,0,1,1),2)), nrow=8, ncol=4, byrow=FALSE)
  library(xtable)
x <- xtable(X, align=rep("",ncol(X)+1),digits=rep(0, ncol(X)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
X <- matrix(c(rep(1,8), rep(1,4), rep(0,8), rep(1,4), rep(c(1,1,0,0),2), rep(c(0,0,1,1),4), rep(c(1,1,0,0),4), nrow=8, ncol=5, byrow=FALSE)
  library(xtable)
x <- xtable(X, align=rep("",ncol(X)+1),digits=rep(0, ncol(X)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
X <- matrix(c(rep(1,8), rep(1,4), rep(0,8), rep(1,4), rep(c(1,1,0,0),2), rep(c(0,0,1,1),4), rep(c(1,1,0,0),2), nrow=8, ncol=5, byrow=FALSE)
  library(xtable)
x <- xtable(X, align=rep("",ncol(X)+1),digits=rep(0, ncol(X)+1)) # We repeat empty string 6 times
print(x, floating=FALSE, tabular.environment="pmatrix", 
  hline.after=NULL, include.rownames=FALSE, include.colnames=FALSE)
'org_babel_R_eoe'
X
